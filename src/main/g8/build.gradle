buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'idea'
}

sourceCompatibility = $java_version$
targetCompatibility = $java_version$

group '$package$'
description '$project_description$'
version '0.1.0'

configurations {
    testCompile.extendsFrom compileOnly
}

// Local variables for this build file
ext {
    junitVersion = '$junit_version$'
    lombokVersion = '$lombok_version$'
}

repositories {
    mavenCentral()
}

dependencies {
    //compileOnly
    //lombok - live boilerplate code generator
    annotationProcessor "org.projectlombok:lombok:\$lombokVersion"
    compileOnly "org.projectlombok:lombok:\$lombokVersion"

    //testCompile
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "\$junitVersion"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: "\$junitVersion"

    testAnnotationProcessor "org.projectlombok:lombok:\$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:\$lombokVersion"
}

test {
    testLogging {
        exceptionFormat = 'full'
        //showStandardStreams true
        events "skipped", "failed"
        afterSuite { desc, result ->
            if (!desc.parent) {
                println "Result: \${result.resultType} (\${result.testCount} tests, \${result.successfulTestCount} successes, \${result.failedTestCount} failures, \${result.skippedTestCount} skipped)"
            }
        }
    }
}

// Generate coverage report after testing
test.finalizedBy jacocoTestReport

idea {
    project {
        jdkName = '1.$java_version$'
        languageLevel = '1.$java_version$'
        vcs = 'Git'
    }
}

allprojects {
    tasks.withType(JavaForkOptions) {
        // Forked processes like GradleWorkerMain for tests won't steal focus!
        jvmArgs '-Djava.awt.headless=true'
    }
}

test {
    useJUnitPlatform()
}
